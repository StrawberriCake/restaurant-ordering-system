upstream backend {
    server  webserver:8888;
}

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri uri/ /index.html;
    }

    location /api {
        proxy_pass http://backend;
        proxy_set_header Host            $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header        X-Forwarded-Proto $http_x_forwarded_proto; # aws version - essentially this sets https schema

        # enable WebSockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # redirect server error pages to the static pages while intercepting proxy errors
    #
    proxy_intercept_errors on;
    error_page  401              /error_pages/401.html;
    error_page  402              /error_pages/402.html;
    error_page  403              /error_pages/403.html;
    error_page  404              /error_pages/404.html;
    error_page  400 405 406 407 408 409 410 411 412 413 414 415 415 418 421 422 423 424 425 426 428 429 431 451 500 501 505 506 507 508 510 511 /error_pages/generic.html;
    error_page  502 503 504      /error_pages/server_down.html;


    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
